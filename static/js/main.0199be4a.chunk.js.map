{"version":3,"sources":["context/UserContext.js","components/Header/Header.js","components/Table/Table.js","App.js","index.js"],"names":["UserContext","createContext","Header","search","useContext","searches","setSearch","className","type","placeholder","value","onChange","e","target","Table","employeeData","fetchData","sort","carrot","employees","fetches","sorts","setSort","carrots","onClick","src","width","height","Fragment","filter","employee","name","first","last","toLowerCase","includes","a","b","map","data","index","key","picture","medium","alt","cell","email","dob","date","substring","App","useState","setEmployees","setFetch","setCarrot","fetch","url","json","console","log","results","useEffect","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0199be4a.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nexport const UserContext = createContext(null);\n","import React, { useContext } from \"react\";\nimport { UserContext } from \"../../context/UserContext\";\n\nconst Header = () => {\n  const { search } = useContext(UserContext);\n\n  let [searches, setSearch] = search;\n\n  const onHandleChange = e => {\n    setSearch((searches = e.target.value));\n  };\n\n  return (\n    <>\n      <header>\n        <h1>Employee Directory </h1>\n        <p>\n          Click on carrots to filter by heading or use the search box to narrow\n          your results\n        </p>\n      </header>\n\n      <section className=\"search\">\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          value={searches}\n          onChange={onHandleChange}\n        />\n      </section>\n    </>\n  );\n};\n\nexport default Header;\n","import React, { useContext } from \"react\";\nimport { UserContext } from \"../../context/UserContext\";\n\nconst Table = () => {\n  const { employeeData } = useContext(UserContext);\n  const { fetchData } = useContext(UserContext);\n  const { search } = useContext(UserContext);\n  const { sort } = useContext(UserContext);\n  const { carrot } = useContext(UserContext);\n\n  const [employees, setEmployees] = employeeData;\n  const [fetches, setFetch] = fetchData;\n  const [sorts, setSort] = sort;\n  const [carrots, setCarrot] = carrot;\n\n  const alphabetCheck = () => {\n    setSort(sorts === \"alphabet\" ? \"notAlphabet\" : \"alphabet\");\n  };\n\n  return (\n    <table className=\"employeeTable\">\n      <tbody>\n        <tr>\n          <th>Image</th>\n          <th onClick={alphabetCheck}>\n            Name <img src={carrots} width=\"18px\" height=\"18px\" />\n          </th>\n          <th>Phone</th>\n          <th>Email</th>\n          <th>DOB</th>\n        </tr>\n        {fetches === false ? (\n          <tr className=\"employee\"></tr>\n        ) : (\n          <React.Fragment>\n            {employees\n              // Stores the employee data and filters using search field\n              .filter(employee => {\n                let name = employee.name.first + \" \" + employee.name.last;\n                return name.toLowerCase().includes(search[0].toLowerCase());\n              })\n              // Sorts the data\n              .sort((a, b) => {\n                if (sorts === \"alphabet\") {\n                  return a.name.first + \" \" + a.name.last >\n                    b.name.first + \" \" + b.name.last\n                    ? 1\n                    : -1;\n                } else {\n                  return a.name.first + \" \" + a.name.last <\n                    b.name.first + \" \" + b.name.last\n                    ? 1\n                    : -1;\n                }\n              })\n              // Loops the content from API and displays it to the front end\n              .map((data, index) => (\n                <tr className=\"employee\" key={index}>\n                  <td className=\"employeeImg\">\n                    <img src={data.picture.medium} alt=\"\" />\n                  </td>\n                  <td className=\"employeeName\">\n                    {data.name.first + \" \" + data.name.last}\n                  </td>\n                  <td className=\"employeePhone\">{data.cell}</td>\n                  <td className=\"employeeEmail\">{data.email}</td>\n                  <td className=\"employeeDOB\">\n                    {data.dob.date.substring(0, 10)}\n                  </td>\n                </tr>\n              ))}\n          </React.Fragment>\n        )}\n      </tbody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { useEffect, useState } from \"react\";\nimport { UserContext } from \"./context/UserContext\";\nimport Header from \"./components/Header/Header\";\nimport Table from \"./components/Table/Table\";\n\nimport \"./components/Header/header.css\";\nimport \"./components/Table/Table.css\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const [employees, setEmployees] = useState({});\n  const [fetches, setFetch] = useState(false);\n  const [searches, setSearch] = useState(\"\");\n  const [sorts, setSort] = useState(\"alphabet\");\n  const [carrots, setCarrot] = useState(\"/img/carrot.png\");\n\n  const fetchData = async () => {\n    let url = await fetch(\n      \"https://randomuser.me/api/?results=400&nat=us,dk,fr,gb\"\n    );\n    let data = await url.json();\n    console.log(data);\n\n    setEmployees(data.results);\n    setFetch(fetches === false ? true : false);\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <UserContext.Provider\n      value={{\n        employeeData: [employees, setEmployees],\n        fetchData: [fetches, setFetch],\n        search: [searches, setSearch],\n        sort: [sorts, setSort],\n        carrot: [carrots, setCarrot]\n      }}\n    >\n      <div>\n        <Header />\n        <Table />\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}